install.packages("devtools")
install.packages("devtools")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
Sys.which("make")
install.packages("jsonlite", type = "source")
install.packages("devtools")
library(devtools)
install_github("ChristinaMasco/song")
library(song)
birds <- song.FromDataObj(wrens) # use song.FromTextFile() for text files
rndbirds <- song.Simulate(birds)
song.Summarize(rndbirds)
song.PlotSongs
song.PlotResultsDensity
song.PlotResultsDensity(rndbirds)
song.PlotSongs(rndbirds)
song.PlotSongs(birds)
song.PlotSongs(birds,0, 300)
song.PlotSongs(birds, start.time=0, end.time=300)
song.PlotSongs(birds, start.time=1000, end.time=1500)
setwd('../desktop/Location_Data/final_analysis')
getwd()
options(max.print=999999)
test <- song.FromTextFile("song_frye31_with_frye32_05-06-2024.txt")
library(song)
test <- song.FromTextFile("song_frye31_with_frye32_05-06-2024.txt")
Time <- song.Simulate(test, num.rand = 1000, overlap.function = "song.TimeOverlap", randomize.function = "song.RandomizeSampleGaps")
song.Summarize(Time)
#shows the results, which can be copied to your Excel file
content <- song.Summarize(model)
#shows the results, which can be copied to your Excel file
content <- song.Summarize(Time)
writeLines(content, "sampleSONG.txt")
#shows the results, which can be copied to your Excel file
content <- c(song.Summarize(Time))
writeLines(content, "sampleSONG.txt")
writeLines(content, "sampleSONG.csv")
#shows the results, which can be copied to your Excel file
content <- as.character(song.Summarize(Time))
writeLines(content, "sampleSONG.csv")
writeLines(content, "sampleSONG.txt")
# List all files in the current directory that start with "song_"
song_files <- list.files(path = ".", pattern = "^song_", all.files = FALSE, full.names = TRUE)
# Print the results
print(song_files)
for (songname in song_files) {
# Print the current element
singing_bout <- song.FromTextFile(songname)
model <- song.Simulate(singing_bout, num.rand = 1000, overlap.function = "song.TimeOverlap", randomize.function = "song.RandomizeSampleGaps")
content <- as.character(song.Summarize(model))
filename <- paste0("output_", songname)
writeLines(content, filename)
print(paste("File saved as:", filename))
}
print(content)
# Print the results
print(song_files)
new_file_str <- substring(original_string, 5)
new_file_str <- substring(songname, 5)
print(new_file_str)
new_file_str <- substring(songname, 7)
print(new_file_str)
new_file_str <- substring(songname, 7)
filename <- paste0("output_", new_file_str)
writeLines(content, filename)
print(paste("File saved as:", filename))
for (songname in song_files) {
print(paste("running SONG on: ", songname))
singing_bout <- song.FromTextFile(songname)
model <- song.Simulate(singing_bout, num.rand = 1000, overlap.function = "song.TimeOverlap", randomize.function = "song.RandomizeSampleGaps")
song.Summarize(model)
content <- as.character(song.Summarize(model))
new_file_str <- substring(songname, 7)
filename <- paste0("output", new_file_str)
writeLines(content, filename)
print(paste("File saved as:", filename))
}
# List all files in the current directory that start with "song_"
song_files <- list.files(path = ".", pattern = "^new_song_", all.files = FALSE, full.names = TRUE)
# Print the results
print(song_files)
for (songname in song_files) {
print(paste("running SONG on: ", songname))
singing_bout <- song.FromTextFile(songname)
model <- song.Simulate(singing_bout, num.rand = 1000, overlap.function = "song.TimeOverlap", randomize.function = "song.RandomizeSampleGaps")
song.Summarize(model)
content <- as.character(song.Summarize(model))
new_file_str <- substring(songname, 7)
filename <- paste0("output", new_file_str)
writeLines(content, filename)
print(paste("File saved as:", filename))
}
song.Summarize(model)
test <- song.FromTextFile("song_frye31_with_frye32_05-06-2024.txt")
Time <- song.Simulate(test, num.rand = 100, overlap.function = "song.TimeOverlap", randomize.function = "song.RandomizeSampleGaps")
song.Summarize(Time)
Time <- song.Simulate(test, num.rand = 5, overlap.function = "song.TimeOverlap", randomize.function = "song.RandomizeSampleGaps")
song.Summarize(Time)
# List all files in the current directory that start with "song_"
song_files <- list.files(path = ".", pattern = "^fixed", all.files = FALSE, full.names = TRUE)
# Print the results
print(song_files)
test_file = song_files[0]
print(test_file)
test_file = song_files[1]
print(test_file)
Time <- song.Simulate(test_file, num.rand = 100, overlap.function = "song.TimeOverlap", randomize.function = "song.RandomizeSampleGaps")
test <- song.FromTextFile(test_file)
Time <- song.Simulate(test, num.rand = 100, overlap.function = "song.TimeOverlap", randomize.function = "song.RandomizeSampleGaps")
song.Summarize(Time)
for (songname in song_files) {
print(paste("running SONG on: ", songname))
singing_bout <- song.FromTextFile(songname)
model <- song.Simulate(singing_bout, num.rand = 1000, overlap.function = "song.TimeOverlap", randomize.function = "song.RandomizeSampleGaps")
song.Summarize(model)
content <- as.character(song.Summarize(model))
new_file_str <- substring(songname, 13)
filename <- paste0("fixed_output", new_file_str)
writeLines(content, filename)
print(paste("File saved as:", filename))
}
song.Summarize(model)
